﻿@using DatabaseFirstDemo.DAO;
@using DatabaseFirstDemo.Models;
@* @model IEnumerable<DatabaseFirstDemo.Models.User> *@
@model DemoWebRebuild14112023.Areas.Admin.Models.RoleUser
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Quản lý người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading">
                Quản lý Người dùng
            </header>
            <div class="panel-body">
                @using (Html.BeginForm("Index", "Users", FormMethod.Get, new { id="form-search"}))
                {
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-lg-6">
                                @Html.TextBox("SearchString", TempData["searchString"],null,new {@class="form-control", @placeholder="Nhập từ khoá cần tìm kiếm"})
                                </div>

                                <div class="col-lg-6">
                                <input type="submit" onclick="return DisplayProgressMessage(this, 'Searching...');" class="btn btn-danger" value="Tìm kiếm" />
                                </div>
                            </div>
                        </div>
                    <div style="clear: both"></div>
                    }
  
                <div class="col-md-12" style="margin-top:10px">
                    <p>
                        <a class="btn btn-danger create">Tạo mới</a>
                    </p>
                    @{
                        if (TempData["AlertMessage"] != null)
                        {
                            <div id="alertBox" class="alert @TempData["Type"]">
                                @TempData["AlertMessage"]
                            </div>
                        }
                    }
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>
                                    @{
                                        var sortBy = Context.Request.Query["sortby"] == "name" ? "namedesc" : "name";
                                    }
                                    <a href="@Url.Action("Index","Users",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                                    Tên đăng nhập
                                    </a>
                                </th>
                                <th>
                                    @{
                                        sortBy = Context.Request.Query["sortby"] == "fullname" ? "fullnamedesc" : "fullname";
                                    }
                                    <a href="@Url.Action("Index","Users",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                                    Họ tên
                                    </a>
                                </th>
                                <th>
                                    @{
                                        sortBy = Context.Request.Query["sortby"] == "address" ? "addressdesc" : "address";
                                    }
                                    <a href="@Url.Action("Index","Users",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                                    Địa chỉ
                                    </a>
                                </th>
                                <th>
                                    Thư điện tử
                                </th>
                                <th>
                                    Mật khẩu
                                </th>
                                <th align="center">
                                    Trạng thái
                                </th>
                                <th>
                                    Quyền truy cập
                                </th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int dem = 1;
                                int page = Convert.ToInt32(Context.Request.Query["page"]);
                                if (page > 1)
                                {
                                    dem = (page - 1) * 3 + 1;
                                }
                            }
                            @foreach (var item in Model.Users)
                            {
                                UserDetail usersDetail = Model.UserDetails.SingleOrDefault(p => p.UserId == item.Id);
                                <tr>
                                    <td>@dem</td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>
                                    <td>
                                        @usersDetail.FullName
                                    </td>
                                    <td>
                                        @usersDetail.Address
                                    </td>
                                    <td>
                                        @usersDetail.Email
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Password)
                                    </td>
                                    <td align="center">
                                        <a href="#" class="btn @((bool)item.Status ? "btn-danger" : "btn-default") btn-active"
                                           data-id="@item.Id">@((bool)item.Status ? "Kích hoạt" : "Khóa")</a>
                                    </td>
                                    <td align="center">
                                        @foreach (var item2 in Model.Roles.Where(p => p.Id == item.RoleId))
                                        {
                                            @Html.DisplayFor(modelItem => item2.Name)
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-danger edit" data-id="@item.Id">Sửa</button>&nbsp;
                                        <button class="btn btn-danger detail" data-id="@item.Id">Chi tiết</button>&nbsp;
                                        <a class="btn btn-danger delete" data-id="@item.Id">Xoá</a>
                                    </td>
                                </tr>
                                dem = dem + 1;
                            }
                        </tbody>
                    </table>
                    <div class="pull-right">
                        @Html.PagedListPager((IPagedList)Model.Users, page => Url.Action("Index", new {page = page,
                        SearchString = @Context.Request.Query["SearchString"], sortby = @Context.Request.Query["sortby"]}),
                    new X.PagedList.Web.Common.PagedListRenderOptions {
                    LiElementClasses = new string[] {"page-item"},
                    PageClasses = new string[] { "page-link" }
                    })
                    </div>
                </div>
               
            </div>
        </section>
    </div>
</div>
<div id="modal-form" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="form-users" method="post" action="#">
                    <div class="form-group">
                        <label for="UserName">Tên đăng nhập</label>
                        <input type="text" class="form-control" id="UserName" name="UserName" placeholder="Nhập tên đăng nhập" required>
                    </div>
                    <div class="form-group">
                        <label for="Password">Mật khẩu</label>
                        <input type="password" class="form-control" id="Password" name="Password" placeholder="Nhập mật khẩu">
                    </div>
                    <div class="form-group">
                        <label for="FullName">Họ và tên</label>
                        <input type="text" class="form-control" id="FullName" name="FullName" placeholder="Nhập họ tên" required>
                    </div>
                    <div class="form-group">
                        <label for="RoleId">Quyền truy cập</label>
                        @Html.DropDownList("RoleId", (SelectList)ViewBag.Roles, new { @class =
                        "form-control", @id = "cboRoleId" })
                    </div>
                    <div class="form-group">
                        <label for="Address">Địa chỉ</label>
                        <input type="text" class="form-control" id="Address" name="Address" placeholder="Nhập địa chỉ" required>
                    </div>
                    <div class="form-group">
                        <label for="Email">Thư điện tử</label>
                        <input type="email" class="form-control" id="Email" name="Email" placeholder="Nhập thư điện tử" required>
                    </div>
                    <div class="form-group">
                        <label for="Status">Trạng thái</label>
                        @Html.CheckBox("Status", true)
                    </div>

                    <input type="hidden" id="UserId" name="UserId" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btn-save">Save</button>
            </div>
        </div>
    </div>
</div>
<div id="modal-form-detail" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="col-lg-6">
                        <label for="UserName">Tên đăng nhập: </label>
                        <lable id="UserNameDetail" style="font-weight: bold"></lable>
                    </div>
                    <div class="col-lg-6">
                        <label for="FullName">Họ và tên: </label>
                        <lable id="FullNameDetail" style="font-weight: bold"></lable>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-6">
                        <label>Quyền truy cập: </label>
                        <lable id="RoleDetail" style="font-weight: bold"></lable>
                    </div>
                    <div class="col-lg-6">
                        <label for="Address">Địa chỉ: </label>
                        <lable id="AddressDetail" style="font-weight: bold"></lable>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-lg-6">
                            <label for="Email">Thư điện tử: </label>
                            <lable id="EmailDetail" style="font-weight: bold"></lable>
                        </div>
                        <div class="col-lg-6">
                            <label for="Status">Trạng thái: </label>
                            <lable id="StatusDetail" style="font-weight: bold"></lable>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Delete Modal -->
<div class="modal fade" id="modal-delete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn xóa mục này?
                <!-- Hidden field to store the id of the product -->
                <input type="hidden" id="delete-id">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="btn-delete">Xóa</button>
            </div>
        </div>
    </div>
</div>
<div class="processing-preview hidden">
</div>
@section scripts{
    @*   <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script> *@
    <script>
        var user = {
            init: function () {
                user.registerEvents();
            },
            registerEvents: function () {
                // Detail User
                $(document).on('click', '.detail', function () {
                    var id = $(this).data('id');
                    //@Url.Action("Detail", "Users")
                    $.get('/Admin/Users/Detail', { id: id })
                        .done(function (response) {
                            if (response.success) {
                                $('#modal-form-detail').modal('show');
                                $('.modal-title').text('Hiển thị thông tin chi tiết người dùng');
                                $('#UserNameDetail').text(response.data.userName);
                                $('#FullNameDetail').text(response.data.fullName);
                                $('#RoleDetail').text(response.data.roleId);
                                $('#AddressDetail').text(response.data.address);
                                $('#EmailDetail').text(response.data.email);
                                $('#StatusDetail').text(response.data.status);
                            } else {
                                alert(response.message);
                            }
                        })
                        .fail(function (error) {
                            console.log(error);
                        });
                });
                // Save user
                $(document).on('click', '#btn-save', function () {
                    var form = $('#form-users');
                    var userDetail = {
                        FullName: $('#FullName').val(),
                        Address: $('#Address').val(),
                        Email: $('#Email').val()
                    };
                    var data = form.serializeArray();
                    data.push({ name: 'userDetail.FullName', value: userDetail.FullName });
                    data.push({ name: 'userDetail.Address', value: userDetail.Address });
                    data.push({ name: 'userDetail.Email', value: userDetail.Email });

                    // Lấy giá trị từ các trường thuộc tính của user trong form
                    // Ví dụ:
                    var user = {
                        UserName: $('#UserName').val(),
                        Password: $('#Password').val(),
                        RoleId: $('#RoleId').val(),
                        Status: $('#Status').is(':checked') // Lấy giá trị checked của trường Status
                    };
                    data.push({ name: 'user.UserName', value: user.UserName });
                    data.push({ name: 'user.Password', value: user.Password });
                    data.push({ name: 'user.RoleId', value: user.RoleId });
                    data.push({ name: 'user.Status', value: user.Status });

                    $.ajax({
                        url: $(this).data('action'),
                        type: 'POST',
                        data: $.param(data),
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                });

                // Edit product
                $(document).on('click', '.edit', function () {
                    var id = $(this).data('id');
                    //@Url.Action("Edit", "Users")
                    $.get('/Admin/Users/Edit', { id: id })
                        .done(function (response) {
                            if (response.success) {
                                $('#modal-form').modal('show');
                                $('.modal-title').text('Chỉnh sửa người dùng');
                                $('#btn-save').attr('data-action', '/Admin/Users/Edit');
                                $('#UserId').val(response.data.id);
                                $('#UserName').val(response.data.userName);
                                $('#FullName').val(response.data.fullName);
                                $('#cboRoleId').val(response.data.roleId);
                                $('#Address').val(response.data.address);
                                $('#Email').val(response.data.email);
                                $('#Status').prop('checked', response.data.status);
                            } else {
                                alert(response.message);
                            }
                        })
                        .fail(function (error) {
                            console.log(error);
                        });
                });

                // Delete product
                $(document).on('click', '.delete', function () {
                    var id = $(this).data('id');
                    $('#delete-id').val(id);
                    $('#modal-delete').modal('show');
                });

                // Delete product
                $(document).on('click', '#btn-delete', function () {
                    var id = $('#delete-id').val();
                    //var url = '/NewsCategory/Delete/' + id;
                    console.log(id);
                    //@Url.Action("Delete", "Users")
                    $.post('/Admin/Users/Delete', { userId: id })
                        .done(function (response) {
                            if (response.success) {
                                $('#modal-delete').modal('hide');
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        })
                        .fail(function (error) {
                            console.log(error);
                        });
                });

                // Create User
                $(document).on('click', '.create', function () {
                    $('#modal-form').modal('show');
                    $('.modal-title').text('Tạo mới người dùng');
                    //@Url.Action("Create", "Users")
                    $('#btn-save').attr('data-action', '/Admin/Users/Create');
                    $('#form-users').trigger('reset');
                });
                $('.btn-active').off('click').on('click', function (e) {
                    e.preventDefault();//Nếu sự kiện click đã được click thì
                    //gỡ ra và gán sự kiện click khác vào với function truyền event mới gọi AJAX, đầu tiên
                    //event sẽ về default như mặc định ban đầu(giống như khi chưa làm gì cả) – tức reset
                    //lại(e.preventDefault)
                    var btn = $(this);
                    var id = btn.data('id');
                    $.ajax({
                        url: "/Admin/Users/ChangeStatus",
                        data: { id: id },
                        datatype: "json",
                        type: "POST",
                        success: function (response) {
                            console.log(response);
                            if (response.status == true) {
                                btn.text('Kích hoạt');
                                btn.removeClass('btn-default').addClass('btn-danger');
                            }
                            else {
                                btn.text('Khóa');
                                btn.removeClass('btn-danger').addClass('btn-default');
                            }
                        }
                    });
                });
            }
        }
        user.init();

        $(function () {
            $('#alertBox').removeClass('hide');
            $('#alertBox').delay(5000).slideUp(500);
        })
        function DisplayProgressMessage(ctl, msg) {
            //if use the submit button, you can use event.preventDefault to prevent the default submit form behavior.
            event.preventDefault();
            // Turn off the "Save" button and change text
            $(ctl).prop("disabled", true).val(msg);
            // Gray out background on page
            $("body").addClass("submit-progress-bg");
            // Wrap in setTimeout so the UI can update the spinners
            $(".processing-preview").removeClass("hidden");
            //submit the form.
            setTimeout(function () {
                $("#form-search").submit();
            }, 5000);
            return true;
        }
    </script>
                    }